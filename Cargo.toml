[package]
name = "three-d"
version = "0.6.1" # Remember to update example links
authors = ["Asger Nyman Christiansen <asgernyman@gmail.com>"]
edition = "2018"
description = "A renderer which compiles to both desktop (OpenGL) and web (WebAssembly + WebGL)."
license = "MIT"
readme = "README.md"
repository = "https://github.com/asny/three-d"
homepage = "https://asny.github.io/three-d/"
categories = ["graphics", "rendering", "visualization", "wasm", "web-programming"]
keywords = ["3d", "gamedev", "webassembly", "opengl", "webgl"]
exclude = ["/examples", ".gitignore", "index.html"]

[features]
default = ["glutin-window", "canvas", "egui-gui", "3d-io", "obj-io", "image-io", "phong-renderer"]
glutin-window = ["glutin"] # Default window for desktop (only available when NOT building for the wasm32 architecture)
canvas = [] # Default window for web (only available when building for the wasm32 architecture)
egui-gui = ["egui"] # Default window for desktop (only available when NOT building for the wasm32 architecture)
image-io = ["image"] # Additional image functionality, for example loading an image to a texture
3d-io = ["serde", "bincode", "image-io"]
obj-io = ["wavefront_obj", "image-io"]
phong-renderer = [] # Phong forward and deferred renderer.
debug = [] # Prints OpenGL debug information (only available when NOT building for the wasm32 architecture)
stub-gl = [] # Allows to initialize a stub three-d context, without OpenGL for testing

[dependencies]
log = "0.4"
cgmath = "0.17"
serde = { version = "1.0", features = ["derive"], optional = true }
bincode = { version = "1.2", optional = true }
wavefront_obj = { version = "8.0", optional = true }
image = { version = "0.23", optional = true, default-features = false, features = ["gif", "jpeg", "ico", "png", "pnm", "tga", "tiff", "webp", "bmp", "hdr", "dxt", "dds", "farbfeld"]}
egui = { version = "0.10", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.build-dependencies]
gl_generator = {version = "0.14"}

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
glutin = { version = "0.27", optional = true }

[patch.crates-io]
#glutin = { path = 'd:/dev/glutin/glutin/' }
glutin = { git = "https://github.com/haraldreingruber-dedalus/glutin", branch = "fix/deactivate-headless-drag-and-drop" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = "0.3"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = ['Document', 'Element', 'Node', 'HtmlElement', 'HtmlCollection', 'HtmlCanvasElement', 'Window', 'CssStyleDeclaration', 'Event', 'MouseEvent', 'EventTarget', 'WheelEvent', 'KeyboardEvent', 'TouchEvent', 'TouchList', 'Touch','WebGlBuffer','WebGlFramebuffer', 'WebGl2RenderingContext', 'WebGlProgram', 'WebGlShader', 'WebGlTexture', 'WebGlUniformLocation', 'WebGlVertexArrayObject', 'WebGlActiveInfo', 'WebGlSync', 'Performance','Headers', 'Request', 'RequestInit', 'RequestMode', 'Response'] }
gloo-timers = "0.2"
serde = { version = "1.0", features = ["derive"] }

[dev-dependencies]
rand = "0.7"